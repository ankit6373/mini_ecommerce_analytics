!set variable_substitution=true;

-- Target context = SILVER/SALES for the current ENV (DEV/QA/PROD)
USE DATABASE &{ENV}_SILVER;
USE SCHEMA SALES;

CREATE OR REPLACE TABLE FACT_ORDERS (
  ORDER_ID             NUMBER        PRIMARY KEY COMMENT 'BUSINESS KEY from STAGING.ORDERS',
  CUSTOMER_ID          NUMBER        COMMENT 'FK TO DIM_CUSTOMER (BUSINESS KEY)',
  ORDER_DATE_ID        NUMBER        COMMENT 'YYYYMMDD from CREATED_AT',
  SHIPPED_DATE_ID      NUMBER        COMMENT 'YYYYMMDD from SHIPPED_AT',
  DELIVERED_DATE_ID    NUMBER        COMMENT 'YYYYMMDD from DELIVERED_AT',
  RETURNED_DATE_ID     NUMBER        COMMENT 'YYYYMMDD from RETURNED_AT',
  STATUS               STRING        COMMENT 'it stores Order status',
  NUM_OF_ITEMS         NUMBER        COMMENT 'it stores the count of items from source',
  ORDER_SUBTOTAL       NUMBER(18,2)  COMMENT 'SUM OF ITEM SALES_PRICE',
  EST_GROSS_MARGIN     NUMBER(18,2)  COMMENT 'SUM(ITEM PRICE - COST)',
  SHIP_LATENCY_DAYS    NUMBER        COMMENT 'DATEDIFF CREATED_AT→SHIPPED_AT',
  DELIVERY_LATENCY_DAYS NUMBER       COMMENT 'DATEDIFF SHIPPED_AT→DELIVERED_AT'
)
COMMENT='ORDER-LEVEL FACT (HEADER), It will store whole order as one row.';

INSERT INTO FACT_ORDERS (
  ORDER_ID, CUSTOMER_ID,
  ORDER_DATE_ID, SHIPPED_DATE_ID, DELIVERED_DATE_ID, RETURNED_DATE_ID,
  STATUS, NUM_OF_ITEMS, ORDER_SUBTOTAL, EST_GROSS_MARGIN,
  SHIP_LATENCY_DAYS, DELIVERY_LATENCY_DAYS
)
-- AGGREGATE ITEM PRICES / MARGINS PER ORDER
WITH ITEM_AGG AS (
  SELECT
    ORDER_ID,
    SUM(SALES_PRICE) AS ORDER_SUBTOTAL,
    SUM(SALES_PRICE - COALESCE(II.COST, P.COST)) AS EST_GROSS_MARGIN
  FROM &{ENV}_SILVER.STAGING.ORDER_ITEMS OI
  LEFT JOIN &{ENV}_SILVER.STAGING.INVENTORY_ITEMS II
    ON OI.INVENTORY_ITEM_ID = II.INVENTORY_ITEM_ID
  LEFT JOIN &{ENV}_SILVER.STAGING.PRODUCTS P
    ON OI.PRODUCT_ID = P.PRODUCT_ID
  GROUP BY ORDER_ID
)
SELECT
  O.ORDER_ID,
  O.CUSTOMER_ID,
  TO_NUMBER(TO_CHAR(O.CREATED_AT::DATE,'YYYYMMDD')) AS ORDER_DATE_ID,
  IFF(O.SHIPPED_AT   IS NULL, NULL, TO_NUMBER(TO_CHAR(O.SHIPPED_AT::DATE,'YYYYMMDD'))) AS SHIPPED_DATE_ID,
  IFF(O.DELIVERED_AT IS NULL, NULL, TO_NUMBER(TO_CHAR(O.DELIVERED_AT::DATE,'YYYYMMDD'))) AS DELIVERED_DATE_ID,
  IFF(O.RETURNED_AT  IS NULL, NULL, TO_NUMBER(TO_CHAR(O.RETURNED_AT::DATE,'YYYYMMDD'))) AS RETURNED_DATE_ID,
  O.STATUS,
  O.NUM_OF_ITEM AS NUM_OF_ITEMS,
  IA.ORDER_SUBTOTAL,
  IA.EST_GROSS_MARGIN,
  IFF(O.SHIPPED_AT   IS NULL, NULL, DATEDIFF('DAY', O.CREATED_AT, O.SHIPPED_AT)) AS SHIP_LATENCY_DAYS,
  IFF(O.DELIVERED_AT IS NULL OR O.SHIPPED_AT IS NULL, NULL, DATEDIFF('DAY', O.SHIPPED_AT, O.DELIVERED_AT)) AS DELIVERY_LATENCY_DAYS
FROM &{ENV}_SILVER.STAGING.ORDERS O
LEFT JOIN ITEM_AGG IA ON IA.ORDER_ID = O.ORDER_ID;