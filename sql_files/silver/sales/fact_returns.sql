!set variable_substitution=true;

-- Target context = SILVER/SALES for the current ENV (DEV/QA/PROD)
USE DATABASE &{ENV}_SILVER;
USE SCHEMA SALES;

CREATE OR REPLACE TABLE FACT_RETURNS (
  ORDER_ITEM_ID        NUMBER        PRIMARY KEY COMMENT 'Returned Item (BUSINESS KEY)',
  ORDER_ID             NUMBER        COMMENT 'It stores Order ID from STAGING.ORDER_ITEMS',
  CUSTOMER_ID          NUMBER        COMMENT 'It stores the CUSTOMER ID',
  PRODUCT_ID           NUMBER        COMMENT 'It stores the PRODUCT ID',
  RETURN_DATE_ID       NUMBER        COMMENT 'YYYYMMDD FROM RETURNED_AT',
  DELIVERED_DATE_ID    NUMBER        COMMENT 'YYYYMMDD FROM DELIVERED_AT (FOR LEAD TIME)',
  REFUND_AMOUNT        NUMBER(18,2)  COMMENT 'Assume Full Price Refunded (Adjust if policy differs)',
  DAYS_TO_RETURN       NUMBER        COMMENT 'DATEDIFF DELIVERED_ATâ†’RETURNED_AT'
)
COMMENT='It stores information about returned orders';

INSERT INTO FACT_RETURNS (
  ORDER_ITEM_ID, ORDER_ID, CUSTOMER_ID, PRODUCT_ID,
  RETURN_DATE_ID, DELIVERED_DATE_ID, REFUND_AMOUNT, DAYS_TO_RETURN
)
SELECT
  OI.ORDER_ITEM_ID,
  OI.ORDER_ID,
  OI.CUSTOMER_ID,
  OI.PRODUCT_ID,
  TO_NUMBER(TO_CHAR(OI.RETURNED_AT::DATE,  'YYYYMMDD'))                                AS RETURN_DATE_ID,
  IFF(OI.DELIVERED_AT IS NULL, NULL, TO_NUMBER(TO_CHAR(OI.DELIVERED_AT::DATE, 'YYYYMMDD'))) AS DELIVERED_DATE_ID,
  OI.SALES_PRICE                                                                       AS REFUND_AMOUNT,
  IFF(OI.DELIVERED_AT IS NULL, NULL, DATEDIFF('DAY', OI.DELIVERED_AT, OI.RETURNED_AT)) AS DAYS_TO_RETURN
FROM &{ENV}_SILVER.STAGING.ORDER_ITEMS OI
WHERE OI.RETURNED_AT IS NOT NULL;
