name: Provision Plan

on:
  pull_request:
    branches: [ qa, main ]
    paths:
      - 'provision/**'
      - 'sql_files/**'
      - 'snowsql/**'
      - 'toolkit.conf'
      - '.github/workflows/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install actionlint
        run: |
          curl -sSfL https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash -o /tmp/download-actionlint.bash
          bash /tmp/download-actionlint.bash latest /usr/local/bin
      - name: Run actionlint
        run: actionlint -color

  plan:
    runs-on: ubuntu-latest
    needs: lint
    env:
      # Target env from PR base branch
      ENV: ${{ github.base_ref == 'qa' && 'QA' || 'PROD' }}

      # Shared inputs
      SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}

      # Per-env creds
      SNOWFLAKE_USER:      ${{ github.base_ref == 'qa' && secrets.SNOWFLAKE_USER_QA   || secrets.SNOWFLAKE_USER_PROD }}
      SNOWFLAKE_PASSWORD:  ${{ github.base_ref == 'qa' && secrets.SNOWFLAKE_PASSWORD_QA || secrets.SNOWFLAKE_PASSWORD_PROD }}
      SNOWFLAKE_ROLE:      ${{ github.base_ref == 'qa' && secrets.SNOWFLAKE_ROLE_QA   || secrets.SNOWFLAKE_ROLE_PROD }}
      SNOWSQL_PWD:         ${{ github.base_ref == 'qa' && secrets.SNOWFLAKE_PASSWORD_QA || secrets.SNOWFLAKE_PASSWORD_PROD }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17 (Toolkit requires Java)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install phData Toolkit CLI
        env:
          TOOLKIT_VERSION: "0.79.0"
          TOOLKIT_URL: "https://repo.phdata.io/3BCJzuXgtfTCoa6c/toolkit-cli/maven/io/phdata/toolkit/toolkit-cli/0.79.0/toolkit-cli-0.79.0.zip"
        shell: bash
        run: |
          set -euo pipefail
          ROOT="$HOME/.phdata/toolkit-${TOOLKIT_VERSION}"
          mkdir -p "$ROOT"
          echo "Downloading Toolkit: $TOOLKIT_URL"
          curl -sSfL "$TOOLKIT_URL" -o "/tmp/toolkit-${TOOLKIT_VERSION}.zip"
          unzip -q "/tmp/toolkit-${TOOLKIT_VERSION}.zip" -d "$ROOT"

          ROOT="$HOME/.phdata/toolkit-${TOOLKIT_VERSION}"
          NESTED_DIR="$ROOT/toolkit-cli-${TOOLKIT_VERSION}"

          if [ -x "$ROOT/toolkit-cli-${TOOLKIT_VERSION}/toolkit" ]; then
            chmod +x "$ROOT/toolkit-cli-${TOOLKIT_VERSION}/toolkit"
            echo "$ROOT/toolkit-cli-${TOOLKIT_VERSION}" >> "$GITHUB_PATH"
          elif JAR_FILE="$(find "$ROOT" -maxdepth 2 -name "toolkit-cli-${TOOLKIT_VERSION}-*.jar" | head -n1 || true)"; then
            LAUNCHER="$ROOT/toolkit"
            {
              echo '#!/usr/bin/env bash'
              echo "exec java -jar \"$JAR_FILE\" \"\$@\""
            } > "$LAUNCHER"
            chmod +x "$LAUNCHER"
            echo "$ROOT" >> "$GITHUB_PATH"
          else
            echo "Could not find toolkit binary or jar in extracted archive:"
            find "$ROOT" -maxdepth 2 -print
            exit 1
          fi

          echo "Toolkit version:"
          toolkit --version || true

      - name: Authenticate Toolkit
        env:
          TOOLKIT_TOKEN: ${{ secrets.TOOLKIT_TOKEN }}
        run: |
          toolkit auth set-token "$TOOLKIT_TOKEN"

      - name: Provision (plan only)
        run: toolkit provision apply --plan

      # Optional: list changed SQL in this PR
      - name: List changed SQL files
        shell: bash
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep -E '^sql_files/.*\.sql$' || echo "No SQL changes."

